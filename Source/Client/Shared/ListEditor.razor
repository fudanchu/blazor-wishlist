@inject HttpClient httpClient
@inject NavigationManager navigationManager
@inject DialogService dialogService
@inject ICommonService commonService
@inject AuthenticationStateProvider authStateProvider

<EditForm id="EditGiftForm" Model="@gift" OnValidSubmit="@ProcessGift">
    <DataAnnotationsValidator />

    <input type="hidden" id="UserAskingId" value="@gift.UserAskingId" />

        <CommonInput Placeholder="Gift Name (required)"
                     @bind-Value="@gift.Name"
                     ValidationFor="@(() => gift.Name)"
                     IsAutoFocused="true"
                     Icon="fa-gift"></CommonInput>

        <CommonInput Placeholder="Description?"
                     @bind-Value="@gift.Description"
                     ValidationFor="@(() => gift.Description)"
                     Icon="fa-gift optional"></CommonInput>

        <CommonInput Placeholder="Link?"
                     @bind-Value="@gift.WebLink"
                     ExtraCSS="max-w70-control"
                     ValidationFor="@(() => gift.WebLink)"
                     Icon="fa-link optional"></CommonInput>

        <CommonInput Placeholder="Cost?"
                     @bind-Value="@gift.Cost"
                     ExtraCSS="max-w70-control"
                     InputType="decimal"
                     ValidationFor="@(() => gift.Cost)"
                     Icon="fa-dollar-sign optional"></CommonInput>


        <div class="form-group top">
            <button type="submit" class="btn @buttonClass">
                @buttonText
            </button>
        </div>
</EditForm>

@if (gifts == null)
{
    <div class="alert alert-secondary">Loading your list...</div>
}
else if (gifts.Length == 0)
{
    <div class="alert alert-secondary">No gifts yet!</div>
}
else
{
    <table class="table highlight-on-hover">
        <thead>
            <tr>
                <th>Gift Name</th>
                <th>Description</th>
                <th>Edit/Delete</th>
            </tr>
        </thead>
        <tbody>
            @foreach (Gift gift in gifts)
            {
                <tr>
                    <td>
                        @if (UrlValidation.IsValidUrl(gift.WebLink))
                        {
                            <a href="@gift.WebLink" target="_blank">@gift.Name</a>
                        }
                        else
                        {
                            @gift.Name
                        }
                    </td>
                    <td>
                        @if (gift.Cost.HasValue && gift.Cost > 0)
                        {
                            <span>
                                [@gift.DisplayCost]
                            </span>
                        }
                        @gift.Description
                    </td>
                    <td>
                        <a href="#EditGiftForm" @onclick="@(() => EnterEditState(gift))" class="btn btn-primary">
                            <span class="fas fa-fw fa-pencil-alt"></span>
                        </a>
                        <button @onclick="@(() => Delete(gift))" class="btn btn-danger">
                            <span class="fas fa-fw fa-trash-alt"></span>
                        </button>
                    </td>
                </tr>
            }
            @if (!string.IsNullOrEmpty(ListNote))
            {
                <tr><td colspan="3" title="This is set under your Profile" class="list-note">Your list note: @ListNote</td></tr>
            }
        </tbody>
    </table>
}