@page "/register"
@layout AuthLayout
@inject NavigationManager navigationManager
@inject CustomStateProvider authStateProvider
@inject IToastService toastService

<div class="card rounded-corners max-width-medium mx-auto">
    <h1 class="card-header">Register        
        <a href="login" class="btn btn-danger float-right" title="Cancel Registration">X</a>
    </h1>
    <div class="card-body">

        <EditForm OnValidSubmit="OnSubmit" Model="registerRequest">
            <DataAnnotationsValidator />

            <div>
            <CommonInput Placeholder="Authorization Code?"
                         @bind-Value="registerRequest.AuthorizationCode"
                         ValidationFor="@(() => registerRequest.AuthorizationCode)"
                         Icon="fa-lock secondary"
                         IsAutoFocused="true"></CommonInput>
            </div>

            <CommonInput Placeholder="First Name like Daniel"
                         @bind-Value="registerRequest.FirstName"
                         ValidationFor="@(() => registerRequest.FirstName)"
                         Icon="fa-user"></CommonInput>

            <CommonInput Placeholder="Last Name like Smith"
                         @bind-Value="registerRequest.LastName"
                         ValidationFor="@(() => registerRequest.LastName)"
                         Icon="fa-user"></CommonInput>

            <CommonInput Placeholder="(optional) Nick Name?"
                         @bind-Value="registerRequest.NickName"
                         ValidationFor="@(() => registerRequest.NickName)"
                         Icon="fa-user-tag optional"></CommonInput>

            <CommonInput Placeholder="Email like dan@mail.com"
                         @bind-Value="registerRequest.Email"
                         ValidationFor="@(() => registerRequest.Email)"
                         Icon="fa-envelope"></CommonInput>

            <CommonInput Placeholder="Password"
                         InputType="password"
                         @bind-Value="registerRequest.Password"
                         ValidationFor="@(() => registerRequest.Password)"
                         Icon="fa-key"></CommonInput>

            <CommonInput Placeholder="Password Confirmation"
                         InputType="password"
                         @bind-Value="registerRequest.PasswordConfirm"
                         ValidationFor="@(() => registerRequest.PasswordConfirm)"
                         Icon="fa-key"></CommonInput>

            <div class="text-center">
                <button class="btn btn-lg btn-primary m-3" type="submit">Create User</button>
            </div>
        </EditForm>
    </div>
</div>

@functions {
    RegisterRequest registerRequest { get; set; } = new RegisterRequest();

    async Task OnSubmit()
    {
        try
        {
            await authStateProvider.Register(registerRequest);
            navigationManager.NavigateTo("user/profile");
        }
        catch (Exception ex)
        {
            toastService.ShowError(ex.Message);
        }
    }
}